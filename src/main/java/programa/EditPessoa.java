/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package programa;

import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author biiel
 */
public class EditPessoa extends javax.swing.JFrame {

    private String funcao;
    private Arquivo arquivo;    
    private Erro erro = new Erro();

    /**
     * Creates new form AditPessoa
     *
     * @param arq
     * @param funcao
     */
    public EditPessoa(Arquivo arq, String funcao) {
        initComponents();
        this.arquivo = arq;
        this.funcao = funcao;

        DefaultTableModel val = (DefaultTableModel) tabela.getModel();
        Iterator<Pessoa> iterator = arq.getPessoas().iterator();
        while (iterator.hasNext()) {
            Pessoa pessoa = iterator.next();
            String nome = pessoa.getNome();
            Double saldo = pessoa.getSaldo();
            val.addRow(new String[]{nome, String.valueOf(saldo)});
        }
        
        switch (funcao) {
            case "+":
                btSalvar.setText("ADICIONAR");
                txtAviso.setText("*Digite o nome da pessoa para adicionar.");
                break;
            
            case "=":
                btSalvar.setText("EDITAR");
                txtAviso.setText("*Selecione a pessoa para editar.");
                break;
            
            case "-":
                btSalvar.setText("REMOVER");
                txtAviso.setText("*Selecione a pessoa que irá remover.");                
                tfNome.setVisible(false);
                txtNome.setVisible(false);
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        tfNome = new javax.swing.JTextField();
        btSalvar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        txtNome = new javax.swing.JLabel();
        txtAviso = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Saldo Devedor"
            }
        ));
        jScrollPane1.setViewportView(tabela);

        btSalvar.setText("SALVAR");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btCancelar.setText("CANCELAR");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        txtNome.setText("Novo nome:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(106, 106, 106)
                            .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtNome)
                        .addComponent(tfNome))
                    .addComponent(txtAviso))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(txtNome)
                .addGap(18, 18, 18)
                .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtAviso)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(btCancelar))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        //Botão Cancelar
        this.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // Botão Salvar
        switch (funcao) {
            case "+":
                if (!tfNome.getText().isEmpty()) {
                    Pessoa pessoa = new Pessoa(tfNome.getText(), 0.0);
                    arquivo.adiciona(pessoa);
                    this.dispose();
                } else {
                    erro.erro("Nome não preenchido", "Preencha um nome para adicionar!", "erro");
                }
                break;
            
            case "=":
                if (!tfNome.getText().isEmpty() && tabela.getSelectedRow() != -1) {
                    String nome = tabela.getValueAt(tabela.getSelectedRow(), 0).toString();
                    Double valor = Double.parseDouble(tabela.getValueAt(tabela.getSelectedRow(), 1).toString());
                    Pessoa pessoa = new Pessoa(nome, valor);
                    arquivo.edita(pessoa, tfNome.getText());
                    this.dispose();
                } else {
                    erro.erro("Nome não preenchido", "Preencha um nome para editar!", "erro");
                }
                break;
            
            case "-":
                if (tabela.getSelectedRow() != -1) {
                    String nome = tabela.getValueAt(tabela.getSelectedRow(), 0).toString();
                    Double valor = Double.parseDouble(tabela.getValueAt(tabela.getSelectedRow(), 1).toString());
                    Pessoa pessoa = new Pessoa(nome, valor);
                    if (valor != 0) {
                        Object[] options = {"Sim", "Não"};
                        int teste = JOptionPane.showOptionDialog(this, "Essa pessoa possui saldo pendente, deseja exclui-la mesmo assim?", "Confirmação de Exclusão", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                        switch (teste) {
                            case 0:  //Sim
                                arquivo.remove(pessoa);
                                this.dispose();
                                break;
                            case 1:  //Não
                                this.dispose();
                            case -1: //Fechar
                                this.dispose();
                        }
                    } else {
                        arquivo.remove(pessoa);
                        this.dispose();
                    }
                } else {
                    erro.erro("Erro de seleção", "Selecione um nome", "erro");
                }
                break;
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btSalvar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField tfNome;
    private javax.swing.JLabel txtAviso;
    private javax.swing.JLabel txtNome;
    // End of variables declaration//GEN-END:variables
}
